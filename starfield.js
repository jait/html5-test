// Generated by CoffeeScript 1.10.0
(function() {
  var canvas, centerX, centerY, ctx, drawStar, initStar, log, main, numStars, resize, root, starImageData, stars, start, startTimeout, stop, update, updateInterval, updateTimeout, zMax, zSpeed;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  canvas = null;

  ctx = null;

  starImageData = null;

  numStars = 200;

  stars = [];

  startTimeout = null;

  updateTimeout = null;

  updateInterval = 40;

  zMax = 256;

  zSpeed = updateInterval / 10 | 0;

  centerX = centerY = 0;

  log = function(msg) {
    return typeof console !== "undefined" && console !== null ? console.log(msg) : void 0;
  };

  main = function() {
    var i;
    canvas = document.getElementById("canvas");
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
    centerX = canvas.width / 2;
    centerY = canvas.height / 2;
    ctx = canvas.getContext("2d");
    ctx.fillStyle = "#000000";
    ctx.fillRect(0, 0, canvas.width, canvas.height);
    starImageData = ctx.createImageData(1, 1);
    starImageData.data[0] = 255;
    starImageData.data[1] = 255;
    starImageData.data[2] = 255;
    starImageData.data[3] = 255;
    i = 0;
    while (i++ < numStars) {
      stars.push(initStar());
    }
    start();
  };

  start = function() {
    startTimeout = null;
    return updateTimeout = window.setInterval(update, updateInterval);
  };

  stop = function() {
    if (updateTimeout != null) {
      return clearTimeout(updateTimeout);
    }
  };

  initStar = function(star) {
    star = star != null ? star : {};
    star.x = Math.random() * canvas.width * 2 - canvas.width | 0;
    star.y = Math.random() * canvas.height * 2 - canvas.height | 0;
    if (star.x === 0 && star.y === 0) {
      star.x = 1;
    }
    star.z = zMax;
    return star;
  };

  drawStar = function(x, y, intensity) {
    if (intensity == null) {
      intensity = 255;
    }
    starImageData.data[0] = starImageData.data[1] = starImageData.data[2] = intensity;
    return ctx.putImageData(starImageData, x, y);
  };

  update = function() {
    var gx, gy, intensityScale, j, len, s;
    ctx.fillRect(0, 0, canvas.width, canvas.height);
    intensityScale = 510 / zMax;
    for (j = 0, len = stars.length; j < len; j++) {
      s = stars[j];
      gx = s.x * 256 / s.z + centerX;
      gy = s.y * 256 / s.z + centerY;
      if (gx < canvas.width && gx > -1 && gy < canvas.height && gy > -1) {
        drawStar(gx, gy, (zMax - s.z) * intensityScale | 0);
      } else {
        initStar(s);
      }
      s.z -= zSpeed;
      if (s.z === 0) {
        s.z = -1;
      }
    }
  };

  resize = function() {
    stop();
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
    centerX = canvas.width / 2;
    centerY = canvas.height / 2;
    if (startTimeout) {
      window.clearTimeout(startTimeout);
      startTimeout = null;
    }
    startTimeout = window.setTimeout(function() {
      return start();
    }, 100);
  };

  root.resize = resize;

  root.main = main;

  root.start = start;

  root.stop = stop;

}).call(this);
